[tool.poetry]
name = "allowed"
version = "1.2"
description = "Check if a program only uses a subset of the Python language."
authors = ["Michel Wermelinger <michel.wermelinger@open.ac.uk>"]
readme = "README.md"
license = "BSD-3-Clause"
repository = "https://github.com/dsa-ou/allowed"
homepage = "https://dsa-ou.github.io/allowed/"
keywords = ["education"]
classifiers = [
    "Intended Audience :: Education",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.10",
    "Topic :: Education",
    "Operating System :: OS Independent",
    ]

[tool.poetry.dependencies]
# use same versions as m269-installer
python = "~3.10"
ipython = {version = "8.13.1", optional = true}
pytype = {version = "2023.04.27", optional = true, markers = "platform_system != 'Windows'"}

[tool.poetry.extras]
pytype = ["pytype"]
ipython = ["ipython"]
all = ["ipython", "pytype"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.11"
mypy = "^1.8.0"
bandit = "^1.7.6"

[tool.poetry.scripts]
allowed = "allowed.allowed:main"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [              # ignore these rules:
    "ANN101",           # provide the type of `self`
    "ANN401",           # don't use `Any`
    "SIM110",           # simplify for-loops with all() or any()
    "T201",             # don't use `print`
    "ISC001", "COM812", # these rules may conflict with the formatter
    "UP038",            # this rule leads to slower code
    ]

[tool.ruff.lint.pydocstyle]
convention = "pep257"   # this project's docstrings follow PEP 257

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"